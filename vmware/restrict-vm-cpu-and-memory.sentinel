# This policy checks if VMware VMs cross
# 4096 MB memory and 4 cpu limit

# Import common-functions/tfplan-functions/tfplan-functions.sentinel
# with alias "plan"
import "tfplan-functions" as plan

# CPU and Memory (MB) Limits
maxCPUs = 4
maxMemory = 4096

# Get all VMs
allVMs = plan.find_resources("vsphere_virtual_machine")

# Filter to VMs with high CPU
# Warnings will be printed for all violations since the last parameter is true
highCPUVMs = plan.filter_attribute_greater_than_value(allVMs,
             "num_cpus", maxCPUs, true)

# Filter to VMs with high memory
# Warnings will be printed for all violations since the last parameter is true
highMemoryVMs = plan.filter_attribute_greater_than_value(allVMs,
                "memory", maxMemory, true)

# Main rule
validated = length(highCPUVMs["messages"]) is 0 and length(highMemoryVMs["messages"]) is 0

# Add print output to make it clear to user why the rule failed.
if length(highCPUVMs["messages"]) is > 0 {
  print("This policy prevents a user from requesting more than 4 CPUs for a VM without obtaining supervisor approval.")
}
if length(highMemoryVMs["messages"]) is > 0 {
  print("This policy prevents a user from requesting more than 4096 for a VM without obtaining supervisor approval.")
}

main = rule {
  validated
}
